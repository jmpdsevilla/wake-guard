#!/bin/bash

# Wake Guard - System Check
# Verifica que el sistema cumple con los requisitos para Wake Guard

echo "üîç Wake Guard - Verificaci√≥n del Sistema"
echo "========================================"
echo

# Verificar macOS
echo "üì± Sistema Operativo:"
if [[ "$(uname)" == "Darwin" ]]; then
    MACOS_VERSION=$(sw_vers -productVersion)
    echo "‚úÖ macOS $MACOS_VERSION"
    
    # Verificar versi√≥n m√≠nima (12.0)
    if [[ "$(echo "$MACOS_VERSION" | cut -d. -f1)" -ge 12 ]]; then
        echo "‚úÖ Versi√≥n compatible (requiere 12.0+)"
    else
        echo "‚ùå Versi√≥n no compatible (requiere macOS 12.0+)"
        exit 1
    fi
else
    echo "‚ùå No es macOS - Wake Guard solo funciona en macOS"
    exit 1
fi

echo

# Verificar arquitectura
echo "üñ•Ô∏è  Arquitectura:"
ARCH=$(uname -m)
echo "‚ÑπÔ∏è  $ARCH"
if [[ "$ARCH" == "arm64" ]]; then
    echo "‚úÖ Apple Silicon detectado"
    BREW_PATH="/opt/homebrew"
elif [[ "$ARCH" == "x86_64" ]]; then
    echo "‚úÖ Intel detectado"
    BREW_PATH="/usr/local"
else
    echo "‚ö†Ô∏è  Arquitectura no reconocida"
    BREW_PATH="/usr/local"
fi

echo

# Verificar Homebrew
echo "üç∫ Homebrew:"
if command -v brew &> /dev/null; then
    BREW_VERSION=$(brew --version | head -1)
    echo "‚úÖ $BREW_VERSION"
    echo "üìÅ Ubicaci√≥n: $(which brew)"
else
    echo "‚ùå Homebrew no instalado"
    echo "‚ÑπÔ∏è  Se instalar√° autom√°ticamente durante la instalaci√≥n de Wake Guard"
fi

echo

# Verificar dependencias
echo "üì¶ Dependencias:"

# SleepWatcher
if command -v sleepwatcher &> /dev/null; then
    echo "‚úÖ SleepWatcher instalado: $(which sleepwatcher)"
else
    echo "‚ùå SleepWatcher no instalado"
    echo "‚ÑπÔ∏è  Se instalar√° autom√°ticamente"
fi

# ImageSnap
if command -v imagesnap &> /dev/null; then
    echo "‚úÖ ImageSnap instalado: $(which imagesnap)"
    
    # Probar ImageSnap
    echo "üß™ Probando ImageSnap..."
    TEST_FILE="/tmp/wake_guard_test.jpg"
    if imagesnap -q "$TEST_FILE" 2>/dev/null; then
        echo "‚úÖ ImageSnap funciona correctamente"
        rm -f "$TEST_FILE"
    else
        echo "‚ö†Ô∏è  ImageSnap instalado pero no funciona (posible problema de permisos)"
    fi
else
    echo "‚ùå ImageSnap no instalado"
    echo "‚ÑπÔ∏è  Se instalar√° autom√°ticamente"
fi

echo

# Verificar permisos de c√°mara
echo "üì∑ Permisos de C√°mara:"
echo "‚ÑπÔ∏è  Los permisos de c√°mara se verificar√°n durante la instalaci√≥n"
echo "‚ÑπÔ∏è  macOS puede solicitar autorizaci√≥n la primera vez"

echo

# Verificar iCloud Drive
echo "‚òÅÔ∏è  iCloud Drive:"
ICLOUD_DIR="$HOME/Library/Mobile Documents/com~apple~CloudDocs"
if [[ -d "$ICLOUD_DIR" ]]; then
    echo "‚úÖ iCloud Drive disponible"
    echo "üìÅ Ubicaci√≥n: $ICLOUD_DIR"
else
    echo "‚ö†Ô∏è  iCloud Drive no disponible"
    echo "‚ÑπÔ∏è  Puedes usar otras ubicaciones (Escritorio, Documentos, etc.)"
fi

echo

# Verificar espacio en disco
echo "üíæ Espacio en Disco:"
AVAILABLE_SPACE=$(df -h "$HOME" | awk 'NR==2 {print $4}')
echo "‚ÑπÔ∏è  Espacio disponible en Home: $AVAILABLE_SPACE"
echo "‚ÑπÔ∏è  Wake Guard requiere espacio m√≠nimo para fotos"

echo

# Resumen
echo "üìã Resumen:"
echo "=========="

if command -v brew &> /dev/null && [[ "$(echo "$MACOS_VERSION" | cut -d. -f1)" -ge 12 ]]; then
    echo "‚úÖ Sistema listo para Wake Guard"
    echo "üöÄ Puedes proceder con la instalaci√≥n: ./install.sh"
else
    echo "‚ö†Ô∏è  Sistema requiere preparaci√≥n"
    if [[ ! "$(echo "$MACOS_VERSION" | cut -d. -f1)" -ge 12 ]]; then
        echo "‚ùå Actualiza macOS a versi√≥n 12.0 o superior"
    fi
    if ! command -v brew &> /dev/null; then
        echo "‚ÑπÔ∏è  Homebrew se instalar√° autom√°ticamente"
    fi
fi

echo
echo "Para m√°s informaci√≥n, consulta: https://github.com/jmpdsevilla/wake-guard"